c
body.to_json
c
q
body.to_json
c
body.to_json
c
body.to_json
c
q
body.to_json
c
body.to_json
c
body.to_json
quit
hashie[:injured]
hashie = Hash[[[:id, -1], [:cod_ext, "4949KL"], [:activity_id, "1600"], [:description, "Tuberia rota... arreglarlo ya"], [:urgent, false], [:inner_commpany_id, nil]] + [:injured, [:name, "Jose Eduardo"]] + []]
Hash[[[:id, -1], [:cod_ext, "4949KL"], [:activity_id, "1600"], [:description, "Tuberia rota... arreglarlo ya"], [:urgent, false], [:inner_commpany_id, nil]] + [:injured, [:name, "Jose Eduardo"]] + []]
Hash[[[:id, -1], [:cod_ext, "4949KL"], [:activity_id, "1600"], [:description, "Tuberia rota... arreglarlo ya"], [:urgent, false], [:inner_commpany_id, nil]] + [:injured, {:name=>"Jose Eduardo", :surname=>"Reinoso", :address=>"Calle ciudad de elda 4", :contact_number=>"612466184", :contact_number_2=>"612466184", :zip_code=>"46020", :province=>"Valencia", :city=>"Valencia", :cif=>"49436419N"}] + []]
self.class.nested_resources.map { |resources|  [resources, send(resources)&.map(&:to_hash)] }
self.class.nested_resources.map { |resources|  [resources, send(resources)&.map(&:to_hash)]
self.class.nested_resource.yield_self { |resource| resource ? [resource, send(resource)&.to_hash] : [] }
self.class.attributes.map { |attribute| [attribute, send(attribute)] }
c
Hash[[[:user, "TestJedu"], [:password, "Inicio01"], [:token_session, nil], [:expires, nil]] + [] + []]
self.class.nested_resources.map { |resources|  [resources, send(resources)&.map(&:to_hash)] }
self.class.nested_resources.map { |resources|  [resources, send(resources)&.map(&:to_hash)]
self.class.nested_resource.yield_self { |resource| resource ? [resource, send(resource)&.to_hash] : [] }
self.class.attributes.map { |attribute| [attribute, send(attribute)] }
q
self.class.nested_resource.yield_self { |resource| resource ? [resource, send(resource)&.to_hash] : [] }
q
self.class.nested_resource.yield_self { |resource| resource ? [resource, send(resource)&.to_hash] : nil }
q
self.class.nested_resource.yield_self { |resource| resource ? [resource, send(resource)&.to_hash] : [nil, nil] }
q
self.class.nested_resource.yield_self { |res| resource ? [resource, send(resource)&.to_hash] : [nil, nil] }
q
self.class.nested_resource.yield_self { |res| resoruce ? [resource, send(resource)&.to_hash] : [nil, nil] }
quit
send(self.class.nested_resource)&.to_hash
quit
send(self.class.nested_resource&.to_hash)
quit
send(self.class.nested_resource).to_hash
send(self.class.nested_resource)
self.class.nested_resource
quit
injured
to_hash
quit
injured
quit
injured.first.to_hash
injured.first
injured.first.to_hash
injured.to_hash
injured
to_hash
quit
to_hash
to_hahs
c
s
self.class.nested_resource
self.class.nested_attribute
c
q
c
self.class.nested_resource
self.class.nested_resources
self.class.nested_attributes
attributes
c
